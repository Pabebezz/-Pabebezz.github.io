<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pabebe&#39;s Blog</title>
  
  <subtitle>业精于勤，荒于嬉；行成于思，毁于随。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pabebezz.github.io/"/>
  <updated>2022-04-14T08:32:27.739Z</updated>
  <id>https://pabebezz.github.io/</id>
  
  <author>
    <name>Pabebe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>论文所需合集</title>
    <link href="https://pabebezz.github.io/article/ff7cf303/"/>
    <id>https://pabebezz.github.io/article/ff7cf303/</id>
    <published>2022-04-14T07:40:10.000Z</published>
    <updated>2022-04-14T08:32:27.739Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;查重&quot;&gt;&lt;a href=&quot;#查重&quot; class=&quot;headerlink&quot; title=&quot;查重&quot;&gt;&lt;/a&gt;查重&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.paperyy.cn/member_new/thesis/post.aspx&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安全设置手段</title>
    <link href="https://pabebezz.github.io/article/f6fbec83/"/>
    <id>https://pabebezz.github.io/article/f6fbec83/</id>
    <published>2022-04-14T07:39:04.000Z</published>
    <updated>2022-04-14T07:53:33.593Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;windows登录记录&quot;&gt;&lt;a href=&quot;#windows登录记录&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Objective-C语法点</title>
    <link href="https://pabebezz.github.io/article/d97699bf/"/>
    <id>https://pabebezz.github.io/article/d97699bf/</id>
    <published>2021-11-10T09:10:18.000Z</published>
    <updated>2022-04-14T08:12:23.216Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;OC特点&quot;&gt;&lt;a href=&quot;#OC特点&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="IOS" scheme="https://pabebezz.github.io/categories/IOS/"/>
    
    
  </entry>
  
  <entry>
    <title>排查网络故障</title>
    <link href="https://pabebezz.github.io/article/d9b803c4/"/>
    <id>https://pabebezz.github.io/article/d9b803c4/</id>
    <published>2021-09-22T09:23:21.000Z</published>
    <updated>2022-03-16T11:47:35.075Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;校园网又出问题了，补一波，由內到外，一层一层排除，并定位问题。&lt;/p&gt;
&lt;h1 id=&quot;网络不通&quot;&gt;&lt;a href=&quot;#网络不通&quot; class=&quot;headerlink&quot; title=&quot;网络不通&quot;&gt;&lt;/a&gt;网络不通&lt;/h1&gt;&lt;p&gt;1，硬件&lt;/p&gt;
&lt;p&gt;（1）先排查链路，网线有没有问题？ &lt;/p&gt;
&lt;p&gt;网线插好且连接可用&lt;/p&gt;
&lt;p&gt;然后看网卡&lt;/p&gt;
&lt;p&gt;（2）&lt;code&gt;ethtool ethN(网卡编号)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;看关键字  Link detected 为 yes，说明网卡连接正常；Speed 显示当前网卡的速度。&lt;/p&gt;
    
    </summary>
    
    
      <category term="tutorial" scheme="https://pabebezz.github.io/tags/tutorial/"/>
    
  </entry>
  
  <entry>
    <title>面题汇总</title>
    <link href="https://pabebezz.github.io/article/e4767f57/"/>
    <id>https://pabebezz.github.io/article/e4767f57/</id>
    <published>2021-09-10T09:53:37.000Z</published>
    <updated>2022-04-14T08:34:05.409Z</updated>
    
    <summary type="html">
    
      持续更新ing.
    
    </summary>
    
      <category term="Programming" scheme="https://pabebezz.github.io/categories/Programming/"/>
    
    
      <category term="code" scheme="https://pabebezz.github.io/tags/code/"/>
    
      <category term="C++" scheme="https://pabebezz.github.io/tags/C/"/>
    
      <category term="algorithm" scheme="https://pabebezz.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>strcpy()函数被弃用的原因以及扩展</title>
    <link href="https://pabebezz.github.io/article/98352641/"/>
    <id>https://pabebezz.github.io/article/98352641/</id>
    <published>2021-08-24T11:04:35.000Z</published>
    <updated>2022-03-16T11:47:35.072Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bug&quot;&gt;&lt;a href=&quot;#bug&quot; class=&quot;headerlink&quot; title=&quot;bug&quot;&gt;&lt;/a&gt;bug&lt;/h1&gt;&lt;p&gt;VS2015环境下，显示strcpy()函数出错的解决办法： This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.  即使前面加了头函数文件cstring 也无济于事。&lt;/p&gt;
&lt;p&gt;原因：vs准备弃用strcpy的，安全性较低，所以微软提供了&lt;strong&gt;strcpy_s&lt;/strong&gt;来代替.如果继续使用strcpy的，那么只需要在函数体前面加上#pragma warning(disable:4996)就可以了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;strcpy_s(dest, bufsize, src);&lt;/code&gt;&lt;br&gt;&lt;strong&gt;bufsize为dest缓冲区最大长度。&lt;/strong&gt;它与 strcpy 的不同在于，在它取得额外参数来决定目的缓冲区大小时，会因为发生溢位而出现错误，如此一来，就可以预防缓冲区溢位。&lt;/p&gt;
&lt;h1 id=&quot;PS-缓冲区溢位攻击&quot;&gt;&lt;a href=&quot;#PS-缓冲区溢位攻击&quot; class=&quot;headerlink&quot; title=&quot;PS: 缓冲区溢位攻击&quot;&gt;&lt;/a&gt;PS: 缓冲区溢位攻击&lt;/h1&gt;&lt;p&gt;当前存入的数据量大于缓冲区的容量，可能导致栈帧指向原本的函数返回地址被覆盖，黑客利用一点，篡改进程运行时栈（比如指向shell脚本），从而改变程序的正常流向。&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://pabebezz.github.io/categories/Programming/"/>
    
    
      <category term="code" scheme="https://pabebezz.github.io/tags/code/"/>
    
      <category term="C++" scheme="https://pabebezz.github.io/tags/C/"/>
    
      <category term="algorithm" scheme="https://pabebezz.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>位运算</title>
    <link href="https://pabebezz.github.io/article/2633a26/"/>
    <id>https://pabebezz.github.io/article/2633a26/</id>
    <published>2021-07-25T11:40:20.000Z</published>
    <updated>2021-09-06T02:52:17.067Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;位运算&quot;&gt;&lt;a href=&quot;#位运算&quot; class=&quot;headerlink&quot; title=&quot;位运算&quot;&gt;&lt;/a&gt;位运算&lt;/h1&gt;&lt;h2 id=&quot;剑指-Offer-65-不用加减乘除做加法&quot;&gt;&lt;a href=&quot;#剑指-Offer-65-不用加减乘除做加法&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 65. 不用加减乘除做加法&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;剑指 Offer 65. 不用加减乘除做加法&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;参考：&lt;a href=&quot;https://leetcode-cn.com/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/solution/mian-shi-ti-65-bu-yong-jia-jian-cheng-chu-zuo-ji-7/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode-cn.com/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/solution/mian-shi-ti-65-bu-yong-jia-jian-cheng-chu-zuo-ji-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用到位运算，分解成两步：&lt;/p&gt;
&lt;p&gt;（1）无进位：异或 （a^b）&lt;/p&gt;
&lt;p&gt;（2）进位 :与+左移1位 (a&amp;amp;b&amp;lt;&amp;lt;1)&lt;/p&gt;
&lt;p&gt;累加，直至不进位。&lt;/p&gt;
&lt;p&gt;C++\JAVA【Python有所不同】&lt;/p&gt;
&lt;p&gt; 若数字 aaa 和 bbb 中有负数，则变成了减法，如何处理？&lt;br&gt;A ： 在计算机系统中，数值一律用 补码 来表示和存储。补码的优势： 加法、减法可以统一处理（CPU只有加法器）。因此，以上方法 同时适用于正数和负数的加法 。&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://pabebezz.github.io/categories/C/"/>
    
    
      <category term="C++ Primer" scheme="https://pabebezz.github.io/tags/C-Primer/"/>
    
  </entry>
  
  <entry>
    <title>为什么很多题目都对1e9+7(即1000000007)取模？</title>
    <link href="https://pabebezz.github.io/article/78656074/"/>
    <id>https://pabebezz.github.io/article/78656074/</id>
    <published>2021-05-13T09:08:42.000Z</published>
    <updated>2021-05-17T12:35:46.941Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;剑指 Offer 10- II. 青蛙跳台阶问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;做该题时，发现有大数会进行取模运算，有点好奇原因。&lt;/p&gt;
&lt;p&gt;因运算的不断累积，导致结果超过了 int32 甚至 int64 的取值范围。&lt;/p&gt;
&lt;p&gt;当一个问题只对&lt;strong&gt;答案的正确性&lt;/strong&gt;有要求，而不在乎答案的数值，可能会需要将取值很大的数通过求余变小（保证其数值在int类型范围内）。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>引用到底占不占内存空间？</title>
    <link href="https://pabebezz.github.io/article/6d801e4/"/>
    <id>https://pabebezz.github.io/article/6d801e4/</id>
    <published>2021-04-30T01:37:48.000Z</published>
    <updated>2021-04-30T06:00:02.201Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;“声明”和“定义”的区别&quot;&gt;&lt;a href=&quot;#“声明”和“定义”的区别&quot; class=&quot;headerlink&quot; title=&quot;“声明”和“定义”的区别&quot;&gt;&lt;/a&gt;“声明”和“定义”的区别&lt;/h1&gt;&lt;p&gt;首先理解：“声明”和“定义”的区别&lt;/p&gt;
&lt;p&gt;在我以往的课本中，没有明确说明声明和定义的作用。&lt;/p&gt;
&lt;p&gt;在《C++Primer》中&lt;/p&gt;
&lt;p&gt;声明：向编译器“介绍”变量（标识符），告诉编译器该变量的类型与名字。&lt;/p&gt;
&lt;p&gt;定义：向变量分配&lt;strong&gt;存储空间&lt;/strong&gt;，也可进行初始化。&lt;strong&gt;在程序中，变量有且只有一个定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;声明包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义（因在定义时就已经声明了变量的类型与名字）&lt;/li&gt;
&lt;li&gt;extern关键字，以标示变量或者函数的定义在别的文件中&lt;/li&gt;
&lt;li&gt;函数的声明和定义区别比较简单，带有{ }的就是定义，否则就是声明。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="C++" scheme="https://pabebezz.github.io/categories/C/"/>
    
    
      <category term="C++ Primer" scheme="https://pabebezz.github.io/tags/C-Primer/"/>
    
  </entry>
  
  <entry>
    <title>i++ 不能作为左值,而++i能 的原因</title>
    <link href="https://pabebezz.github.io/article/ee51884a/"/>
    <id>https://pabebezz.github.io/article/ee51884a/</id>
    <published>2021-04-24T10:46:00.000Z</published>
    <updated>2021-09-12T13:36:56.338Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;int 类型的++i与i++的实现, 注意i++的返回是 &lt;code&gt;const int&lt;/code&gt;类型,由于oldValue是一个编译器自动分配的临时变量，并不是程序中定义的变量，返回的是一个数据值，而非地址，所以不能对它进行寻址（不能通过地址对它进行操作）.第二，常量不能作为左值使用。&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://pabebezz.github.io/categories/C/"/>
    
    
      <category term="C++ Primer" scheme="https://pabebezz.github.io/tags/C-Primer/"/>
    
  </entry>
  
  <entry>
    <title>for(auto &amp;i:s)和for(auto i:s)的区别</title>
    <link href="https://pabebezz.github.io/article/4aa05e8/"/>
    <id>https://pabebezz.github.io/article/4aa05e8/</id>
    <published>2021-04-19T06:19:38.000Z</published>
    <updated>2021-04-19T08:01:18.240Z</updated>
    
    <summary type="html">
    
      for(auto i:s)相当于拷贝，不改变s的值，详情请点击~
    
    </summary>
    
      <category term="C++" scheme="https://pabebezz.github.io/categories/C/"/>
    
    
      <category term="C++ Primer" scheme="https://pabebezz.github.io/tags/C-Primer/"/>
    
  </entry>
  
  <entry>
    <title>常函数的运用</title>
    <link href="https://pabebezz.github.io/article/e17bc1d7/"/>
    <id>https://pabebezz.github.io/article/e17bc1d7/</id>
    <published>2021-04-17T09:03:52.000Z</published>
    <updated>2021-04-17T10:11:49.361Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;统计一段词中出现次数最多的高频词（不区分大小写）&lt;/p&gt;
&lt;p&gt;思路：用map存储每个词出现的频率（注意为什么不用unordered_map，因为若想实现“不区分大小写”的功能，就必须添加一个自定义比较器，unordered_map不支持这一选项），然后用priority_queue优先级队列的小顶堆特性找到高频词（TOPK问题转换为TOP1）。&lt;/p&gt;
&lt;p&gt;（小顶堆求最大TOPK）堆（size = k）里存放的是当前元素的频率，其中堆顶的元素最小。加入新进来的元素，此时若size&amp;gt;k，弹出堆顶元素，调整堆。【大顶堆求最小TOPK类似】&lt;/p&gt;
&lt;p&gt;在写自定义比较器的过程中出现bug&lt;/p&gt;
&lt;p&gt;&lt;code&gt;错误    C3848    具有类型“const my_less”的表达式会丢失一些 const-volatile 限定符以调用“bool my_less::operator ()(const std::string &amp;amp;,const std::string &amp;amp;)”&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://pabebezz.github.io/categories/C/"/>
    
    
      <category term="C++ Primer" scheme="https://pabebezz.github.io/tags/C-Primer/"/>
    
  </entry>
  
  <entry>
    <title>线性表、顺序表、广义表（其表头表尾）</title>
    <link href="https://pabebezz.github.io/article/13827808/"/>
    <id>https://pabebezz.github.io/article/13827808/</id>
    <published>2021-04-16T13:02:48.000Z</published>
    <updated>2021-04-17T10:13:49.160Z</updated>
    
    <summary type="html">
    
      注意广义表的特殊性
    
    </summary>
    
      <category term="Programming" scheme="https://pabebezz.github.io/categories/Programming/"/>
    
    
      <category term="数据结构" scheme="https://pabebezz.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>为什么拷贝构造函数参数必须为引用？</title>
    <link href="https://pabebezz.github.io/article/c13c7aad/"/>
    <id>https://pabebezz.github.io/article/c13c7aad/</id>
    <published>2021-04-09T13:08:03.000Z</published>
    <updated>2021-04-16T11:58:56.859Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天朋友问我一个特别有意思的点，eg：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m_age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *m_height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//构造函数  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Person(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; h) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		m_age = p.m_age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		&lt;span class=&quot;comment&quot;&gt;//堆区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		m_height = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(h);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//拷贝构造函数  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Person(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Person&amp;amp; p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;拷贝构造函数!&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//如果不利用深拷贝在堆区创建新内存，会导致浅拷贝带来的重复释放堆区问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		m_age = p.m_age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//m_height =   p.m_heigh (浅拷贝，系统默认拷贝构造函数)　 //m_height 是指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		m_height = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(*p.m_height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;Person &lt;span class=&quot;title&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;Person &lt;span class=&quot;title&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(p1)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;无论是系统默认还是自定义的拷贝构造函数，都是传一个&lt;code&gt;引用&lt;/code&gt;，而不是&lt;code&gt;值&lt;/code&gt;，这是为什么呢？&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://pabebezz.github.io/categories/C/"/>
    
    
      <category term="C++ Primer" scheme="https://pabebezz.github.io/tags/C-Primer/"/>
    
  </entry>
  
  <entry>
    <title>打怪之旅-C++基础</title>
    <link href="https://pabebezz.github.io/article/23d2b7d5/"/>
    <id>https://pabebezz.github.io/article/23d2b7d5/</id>
    <published>2021-03-01T09:53:37.000Z</published>
    <updated>2021-04-23T13:48:50.785Z</updated>
    
    <summary type="html">
    
      过一遍语法知识
    
    </summary>
    
      <category term="Programming" scheme="https://pabebezz.github.io/categories/Programming/"/>
    
    
      <category term="code" scheme="https://pabebezz.github.io/tags/code/"/>
    
      <category term="C++" scheme="https://pabebezz.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>打怪之旅-计算机网络</title>
    <link href="https://pabebezz.github.io/article/6cc0fe42/"/>
    <id>https://pabebezz.github.io/article/6cc0fe42/</id>
    <published>2021-02-03T00:53:37.000Z</published>
    <updated>2021-04-22T11:40:12.268Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;术语&quot;&gt;&lt;a href=&quot;#术语&quot; class=&quot;headerlink&quot; title=&quot;术语&quot;&gt;&lt;/a&gt;术语&lt;/h1&gt;&lt;p&gt;ISP (Internet Service Provider)&lt;/p&gt;
&lt;p&gt;RFC (Request For Comments)因特网标准&lt;/p&gt;
&lt;p&gt;ISOC因特网协会&lt;/p&gt;
&lt;p&gt;实体：任何可发送或接受信息的硬件或软件进程&lt;/p&gt;
&lt;p&gt;对等实体:收发双方相同层次中的实体&lt;/p&gt;
&lt;p&gt;协议: 控制两个对等实体进行逻辑通信的规则集合（三要素：语法－定义所交换信息的格式；语义－定义收发双方所要完成的操作；同步－定义收发双方的时许关系）&lt;/p&gt;
&lt;p&gt;服务：在协议的控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务．&lt;/p&gt;
&lt;p&gt;服务访问点：同一系统中相邻两层的实体交换信息的逻辑接口，用于区分不同的服务类型．（eg:数据链路层的点为帧的＂类型＂字段，网络层的点为IP数据报首部中的＂协议字段＂，运输层的点为＂端口号＂）&lt;/p&gt;
&lt;p&gt;服务原语：上层使用下层所提供的服务，必须与下层交换的命令．&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PDU－协议数据单元：对等层次之间传送的数据包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SDU－服务数据单元：同一系统内，层与层之间交换的数据报&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/article/6cc0fe42/image-20210322170050493.png&quot; alt=&quot;image-20210322170050493&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Computer Operating" scheme="https://pabebezz.github.io/categories/Computer-Operating/"/>
    
    
      <category term="study notes" scheme="https://pabebezz.github.io/tags/study-notes/"/>
    
  </entry>
  
  <entry>
    <title>打怪之旅-操作系统</title>
    <link href="https://pabebezz.github.io/article/e0627a3a/"/>
    <id>https://pabebezz.github.io/article/e0627a3a/</id>
    <published>2021-01-30T00:53:37.000Z</published>
    <updated>2021-04-14T09:21:11.433Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;所有网络协议也都是采用大端字节序的方式来传输数据的。所以有时我们把大端字节序方式称之为网络字节序&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Computer Operating" scheme="https://pabebezz.github.io/categories/Computer-Operating/"/>
    
    
      <category term="study notes" scheme="https://pabebezz.github.io/tags/study-notes/"/>
    
  </entry>
  
  <entry>
    <title>打怪之旅-数据结构与算法</title>
    <link href="https://pabebezz.github.io/article/737c8fe7/"/>
    <id>https://pabebezz.github.io/article/737c8fe7/</id>
    <published>2021-01-24T09:53:37.000Z</published>
    <updated>2021-09-10T02:03:46.580Z</updated>
    
    <summary type="html">
    
      leetcode刷题记录以及总结
    
    </summary>
    
      <category term="Programming" scheme="https://pabebezz.github.io/categories/Programming/"/>
    
    
      <category term="code" scheme="https://pabebezz.github.io/tags/code/"/>
    
      <category term="C++" scheme="https://pabebezz.github.io/tags/C/"/>
    
      <category term="algorithm" scheme="https://pabebezz.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>paperMemo-prepare</title>
    <link href="https://pabebezz.github.io/article/5dace05d/"/>
    <id>https://pabebezz.github.io/article/5dace05d/</id>
    <published>2020-12-06T09:31:26.000Z</published>
    <updated>2021-04-08T09:19:41.699Z</updated>
    
    <summary type="html">
    
      论文准备工作，不上传
    
    </summary>
    
      <category term="Scientific Research" scheme="https://pabebezz.github.io/categories/Scientific-Research/"/>
    
    
      <category term="paper" scheme="https://pabebezz.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title>理财小知识</title>
    <link href="https://pabebezz.github.io/article/d95dcfe5/"/>
    <id>https://pabebezz.github.io/article/d95dcfe5/</id>
    <published>2020-11-27T02:46:45.000Z</published>
    <updated>2020-11-27T03:03:35.771Z</updated>
    
    <summary type="html">
    
      涉猎
    
    </summary>
    
      <category term="Finance" scheme="https://pabebezz.github.io/categories/Finance/"/>
    
    
      <category term="tutorial" scheme="https://pabebezz.github.io/tags/tutorial/"/>
    
  </entry>
  
</feed>
